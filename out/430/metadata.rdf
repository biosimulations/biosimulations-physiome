<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<rdf:RDF xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:foaf="http://xmlns.com/foaf/0.1/" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/" xmlns:bqbiol="http://biomodels.net/biology-qualifiers/" xmlns:collex="http://www.collex.org/schema#" xmlns:bqmodel="http://biomodels.net/model-qualifiers/" xmlns:scoro="http://purl.org/spar/scoro/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:biomodel="http://biomodels.net/model-qualifiers/">
  <rdf:Description rdf:about="http://omex-library.org/430.omex">
    <dc:title>Models for the OpenCOR and PMR tutorial by Peter Hunter</dc:title>
  </rdf:Description>
  <rdf:Description rdf:about="http://omex-library.org/430.omex">
    <dc:description>
Models for the Tutorial on CellML, OpenCOR &amp; the Physiome Model Repository
--------------------------------------------------------------------------


In this workspace we have the model and simulation experiment descriptions for the examples used in the tutorial on CellML, OpenCOR &amp; the Physiome Model Repository created by Peter Hunter. The latest version of the tutorial itself is available at: &lt;http://tutorial-on-cellml-opencor-and-pmr.readthedocs.org/&gt;. This tutorial is also utilised as part of the [Computational Physiology](http://dtp-compphys.readthedocs.org) module of the [MedTech CoRE](http://www.cmdt.org.nz) [Doctoral Training Program](https://www.cmdt.org.nz/dtp).


While the tutorial often leads the reader through creating these models from the beginning, here we provide the complete models and associated simulation experiments. As expected from the title of the tutorial, the models themselves are encoded in the [CellML](https://cellml.org) format. The simulation experiments are encoded in the [SED-ML](http://sed-ml.org) format and where possible we link directly to them to enable the user to simply launch them directly in [OpenCOR](http://opencor.ws) from the repository (and also from within the tutorial documentation).



Contents


* [Van der Pol oscillator](#van-der-pol-oscillator)
* [Exponential decay: A simple first order ODE](#exponential-decay-a-simple-first-order-ode)
* [The Lorenz attractor](#the-lorenz-attractor)
* [Gating kinetics explained](#gating-kinetics-explained)
* [The Hodgkin &amp; Huxley potassium and sodium channels](#the-hodgkin-huxley-potassium-and-sodium-channels)




### [Van der Pol oscillator](#contents)


Used in the *Create and run a simple CellML model: editing and simulation* section of the tutorial, the classical [Van der Pol oscillator](https://models.physiomeproject.org/e/430/vanderpol.cellml/view) is the first model described in the tutorial. The simulation experiment for this model described in the tutorial can be obtained by loading the [corresponding SED-ML document](https://models.physiomeproject.org/e/430/vanderpol.sedml) into OpenCOR and executing the simulation. The results of which are shown below.


![Screenshot illustrating the results of executing the Van der Pol simulation experiment in OpenCOR.](screenshots/vanderpol.png)


### [Exponential decay: A simple first order ODE](#contents)


Used as the simplest example of a first order differential equation, this [model](https://models.physiomeproject.org/e/430/Firstorder.cellml/view) consists of a [single equation](https://models.physiomeproject.org/e/430/Firstorder.cellml/cellml_math). One of the simulation experiments for this model described in the tutorial can be obtained by loading the [corresponding SED-ML document](https://models.physiomeproject.org/e/430/Firstorder.sedml) into OpenCOR and executing the simulation.




### [The Lorenz attractor](#contents)


The [Lorenz attractor](https://models.physiomeproject.org/e/430/lorenz.cellml/view) model is used in the tutorial as both an example of interesting dynamics and an illustration of the encoding of a third order differential equation as [three first order equations](https://models.physiomeproject.org/e/430/lorenz.cellml/cellml_math) in CellML. The figure below illustrates the results obtain by loading the [corresponding SED-ML document](https://models.physiomeproject.org/e/430/lorenz.sedml) into OpenCOR and executing the simulation.


![Screenshot illustrating the results of executing the Lorenz attractor simulation experiment in OpenCOR.](screenshots/lorenz.png)


### [Gating kinetics explained](#contents)


The *A model of ion channel gating and current: Introducing CellML units* section in the tutorial introduces the concept of units in CellML models, and along the way provides an explanation of gating kinetics that are common when investigating ion channel behaviour (at least those channels which are voltage senstitive). As such, [this model](https://models.physiomeproject.org/e/430/SimpleFirstOrderEqn.cellml/view) provides a neat little toy for investigating the formulation of traditional ion channel models. Once again, the [corresponding SED-ML document](https://models.physiomeproject.org/e/430/SimpleFirstOrderEqn.sedml) is available to help get the reader started.




### [The Hodgkin &amp; Huxley potassium and sodium channels](#contents)


In the tutorial, the Hodgkin &amp; Huxley [potassium channel](https://models.physiomeproject.org/e/430/potassium_ion_channel.cellml/view) and [sodium channel](https://models.physiomeproject.org/e/430/sodium_ion_channel.cellml/view) are used as the examples illustrating core CellML concepts. As these models get more complex, they are also a great example demonstrating the utility of providing SED-ML alongside the model, as shown with the results presented in the figure below.


![Screenshot illustrating the results of executing this potassium simulation experiment in OpenCOR.](screenshots/potassium_channel.png)


</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="local:00001">
    <dc:identifier rdf:resource="http://identifiers.org/orcid:0000-0001-5801-5510">http://identifiers.org/orcid:0000-0001-5801-5510</dc:identifier>
  </rdf:Description>
  <rdf:Description rdf:about="local:00001">
    <rdfs:label>Bilal Shaikh</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="local:00001">
    <foaf:accountName rdf:resource="https://orcid.org/0000-0001-5801-5510">https://orcid.org/0000-0001-5801-5510</foaf:accountName>
  </rdf:Description>
  <rdf:Description rdf:about="local:00001">
    <foaf:name>Bilal Shaikh</foaf:name>
  </rdf:Description>
  <rdf:Description rdf:about="http://omex-library.org/430.omex">
    <dc:contributor rdf:resource="local:00001">local:00001</dc:contributor>
  </rdf:Description>
  <rdf:Description rdf:about="local:00002">
    <dc:identifier rdf:resource="https://models.physiomeproject.org/e/430">https://models.physiomeproject.org/e/430</dc:identifier>
  </rdf:Description>
  <rdf:Description rdf:about="local:00002">
    <rdfs:label>PMR/e: 430</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://omex-library.org/430.omex">
    <bqmodel:is rdf:resource="local:00002">local:00002</bqmodel:is>
  </rdf:Description>
  <rdf:Description rdf:about="local:00003">
    <dc:identifier rdf:resource="https://creativecommons.org/licenses/by/3.0/">https://creativecommons.org/licenses/by/3.0/</dc:identifier>
  </rdf:Description>
  <rdf:Description rdf:about="local:00003">
    <rdfs:label>CC BY 3.0</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://omex-library.org/430.omex">
    <dc:license rdf:resource="local:00003">local:00003</dc:license>
  </rdf:Description>
  <rdf:Description rdf:about="http://omex-library.org/430.omex/Firstorder.cellml">
    <dc:title>Firstorder.cellml</dc:title>
  </rdf:Description>
  <rdf:Description rdf:about="http://omex-library.org/430.omex/Firstorder.cellml">
    <dc:description>

Exponential decay: A simple first order ODE
-------------------------------------------


Used as the simplest example of a first order differential equation, this model consists of a [single equation](https://models.physiomeproject.org/e/430/Firstorder.cellml/cellml_math). One of the simulation experiments for this model described in the tutorial can be obtained by loading the [corresponding SED-ML document](https://models.physiomeproject.org/e/430/Firstorder.sedml) into OpenCOR and executing the simulation - which can be achived by choosing the **Launch with OpenCOR** link from the *Views Available* listing.



</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="local:00004">
    <dc:identifier rdf:resource="https://creativecommons.org/licenses/by/3.0/">https://creativecommons.org/licenses/by/3.0/</dc:identifier>
  </rdf:Description>
  <rdf:Description rdf:about="local:00004">
    <rdfs:label>CC BY 3.0</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://omex-library.org/430.omex/Firstorder.cellml">
    <dc:license rdf:resource="local:00004">local:00004</dc:license>
  </rdf:Description>
  <rdf:Description rdf:about="http://omex-library.org/430.omex/lorenz.cellml">
    <dc:title>lorenz.cellml</dc:title>
  </rdf:Description>
  <rdf:Description rdf:about="http://omex-library.org/430.omex/lorenz.cellml">
    <dc:description>

The Lorenz attractor
--------------------


The [Lorenz attractor](https://models.physiomeproject.org/e/430/lorenz.cellml/view) model is used as both an example of interesting dynamics and an illustration of the encoding of a third order differential equation as [three first order equations](https://models.physiomeproject.org/e/430/lorenz.cellml/cellml_math) in CellML. The figure below illustrates the results obtain by loading the [corresponding SED-ML document](https://models.physiomeproject.org/e/430/lorenz.sedml) into OpenCOR and executing the simulation.



![Screenshot illustrating the results of executing the Lorenz attractor simulation experiment in OpenCOR.](screenshots/lorenz.png)
A screenshot illustrating the results when the associated SED-ML document is loaded into OpenCOR and the simulation executed.



This can be reproduced directly from the repository by choosing the **Launch with OpenCOR** link from the *Views Available*.


</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="local:00005">
    <dc:identifier rdf:resource="https://creativecommons.org/licenses/by/3.0/">https://creativecommons.org/licenses/by/3.0/</dc:identifier>
  </rdf:Description>
  <rdf:Description rdf:about="local:00005">
    <rdfs:label>CC BY 3.0</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://omex-library.org/430.omex/lorenz.cellml">
    <dc:license rdf:resource="local:00005">local:00005</dc:license>
  </rdf:Description>
  <rdf:Description rdf:about="http://omex-library.org/430.omex/potassium_ion_channel.cellml">
    <dc:title>potassium_ion_channel.cellml</dc:title>
  </rdf:Description>
  <rdf:Description rdf:about="http://omex-library.org/430.omex/potassium_ion_channel.cellml">
    <dc:description>

The HH potassium channel
------------------------


In the tutorial, the [Hodgkin &amp; Huxley potassium channel](https://models.physiomeproject.org/e/430/potassium_ion_channel.cellml/view) is used as the example illustrating the core concepts of components and connections in CellML. It is also a great example demonstrating the utility of [providing SED-ML alongside the model](https://models.physiomeproject.org/e/430/potassium_ion_channel.sedml), as shown with the results presented in the figure below.



![Screenshot illustrating the results of executing this potassium simulation experiment in OpenCOR.](screenshots/potassium_channel.png)
A screenshot illustrating the results when the associated SED-ML document is loaded into OpenCOR and the simulation executed.



This can be reproduced directly from the repository by choosing the **Launch with OpenCOR** link from the *Views Available*.


</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="local:00006">
    <dc:identifier rdf:resource="https://creativecommons.org/licenses/by/3.0/">https://creativecommons.org/licenses/by/3.0/</dc:identifier>
  </rdf:Description>
  <rdf:Description rdf:about="local:00006">
    <rdfs:label>CC BY 3.0</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://omex-library.org/430.omex/potassium_ion_channel.cellml">
    <dc:license rdf:resource="local:00006">local:00006</dc:license>
  </rdf:Description>
  <rdf:Description rdf:about="http://omex-library.org/430.omex/SimpleFirstOrderEqn.cellml">
    <dc:title>SimpleFirstOrderEqn.cellml</dc:title>
  </rdf:Description>
  <rdf:Description rdf:about="http://omex-library.org/430.omex/SimpleFirstOrderEqn.cellml">
    <dc:description>

Gating kinetics explained
-------------------------


The *A model of ion channel gating and current: Introducing CellML units* section in the tutorial introduces the concept of units in CellML models, and along the way provides an explanation of gating kinetics that are common when investigating ion channel behaviour (at least those channels which are voltage senstitive). As such, [this model](https://models.physiomeproject.org/e/430/SimpleFirstOrderEqn.cellml/view) provides a neat little toy for investigating the formulation of traditional ion channel models.


Once again, the [corresponding SED-ML document](https://models.physiomeproject.org/e/430/SimpleFirstOrderEqn.sedml) is available to help get the reader started. The results of this simulation are shown in the figure below.



![Screenshot illustrating the results of executing this first order equation simulation experiment in OpenCOR.](screenshots/simplefirstordereqn.png)
A screenshot illustrating the results when the associated SED-ML document is loaded into OpenCOR and the simulation executed.



This can be reproduced directly from the repository by choosing the **Launch with OpenCOR** link from the *Views Available*.


</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="local:00007">
    <dc:identifier rdf:resource="https://creativecommons.org/licenses/by/3.0/">https://creativecommons.org/licenses/by/3.0/</dc:identifier>
  </rdf:Description>
  <rdf:Description rdf:about="local:00007">
    <rdfs:label>CC BY 3.0</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://omex-library.org/430.omex/SimpleFirstOrderEqn.cellml">
    <dc:license rdf:resource="local:00007">local:00007</dc:license>
  </rdf:Description>
  <rdf:Description rdf:about="http://omex-library.org/430.omex/sodium_ion_channel.cellml">
    <dc:title>sodium_ion_channel.cellml</dc:title>
  </rdf:Description>
  <rdf:Description rdf:about="http://omex-library.org/430.omex/sodium_ion_channel.cellml">
    <dc:description>

The HH sodium channel
---------------------


In the tutorial, the [Hodgkin &amp; Huxley sodium channel](https://models.physiomeproject.org/e/430/sodium_ion_channel.cellml/view) is used as the example illustrating the core concepts of encapsulation and interfaces in CellML. It is also a great example demonstrating the utility of [providing SED-ML alongside the model](https://models.physiomeproject.org/e/430/sodium_ion_channel.sedml), as shown with the results presented in the figure below.



![Screenshot illustrating the results of executing this sodium simulation experiment in OpenCOR.](screenshots/sodium_channel.png)
A screenshot illustrating the results when the associated SED-ML document is loaded into OpenCOR and the simulation executed.



This can be reproduced directly from the repository by choosing the **Launch with OpenCOR** link from the *Views Available*.


</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="local:00008">
    <dc:identifier rdf:resource="https://creativecommons.org/licenses/by/3.0/">https://creativecommons.org/licenses/by/3.0/</dc:identifier>
  </rdf:Description>
  <rdf:Description rdf:about="local:00008">
    <rdfs:label>CC BY 3.0</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://omex-library.org/430.omex/sodium_ion_channel.cellml">
    <dc:license rdf:resource="local:00008">local:00008</dc:license>
  </rdf:Description>
  <rdf:Description rdf:about="http://omex-library.org/430.omex/vanderpol.cellml">
    <dc:title>vanderpol.cellml</dc:title>
  </rdf:Description>
  <rdf:Description rdf:about="http://omex-library.org/430.omex/vanderpol.cellml">
    <dc:description>

Van der Pol oscillator
----------------------


Used in the *Create and run a simple CellML model: editing and simulation* section of the tutorial, the classical [Van der Pol oscillator](https://models.physiomeproject.org/e/430/vanderpol.cellml) is the first model described in the tutorial. The simulation experiment for this model described in the tutorial can be obtained by loading the [corresponding SED-ML document](https://models.physiomeproject.org/e/430/vanderpol.sedml) into OpenCOR and executing the simulation. The results of which are shown below. A rendering of the mathematical model itself is available [here](https://models.physiomeproject.org/e/430/vanderpol.cellml/cellml_math).



![Screenshot illustrating the results of executing the Van der Pol simulation experiment in OpenCOR.](screenshots/vanderpol.png)
A screenshot illustrating the results when the associated SED-ML document is loaded into OpenCOR and the simulation executed.



This can be reproduced directly from the repository by choosing the **Launch with OpenCOR** link from the *Views Available*.


</dc:description>
  </rdf:Description>
  <rdf:Description rdf:about="local:00009">
    <dc:identifier rdf:resource="https://creativecommons.org/licenses/by/3.0/">https://creativecommons.org/licenses/by/3.0/</dc:identifier>
  </rdf:Description>
  <rdf:Description rdf:about="local:00009">
    <rdfs:label>CC BY 3.0</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://omex-library.org/430.omex/vanderpol.cellml">
    <dc:license rdf:resource="local:00009">local:00009</dc:license>
  </rdf:Description>
</rdf:RDF>
